name: Deploy ELK Stack

on:
  push:
    paths:
      - "elk/**" # Monitor changes in the elk directory

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy ELK stack to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ubuntu
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key

          # Copy the entire elk directory
          scp -i private_key -o StrictHostKeyChecking=no -r elk $SERVER_USER@$SERVER_IP:/home/ubuntu/moaaz/docker-elk

          rm -f private_key

      - name: Deploy and Verify ELK services
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ubuntu
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            cd /home/ubuntu/moaaz/docker-elk
            
            # Stop all services
            docker-compose down
            
            # Run setup service first (one-time initialization)
            docker-compose up setup
            
            # Wait for setup to complete
            sleep 30
            
            # Start all main services
            docker-compose up -d
            
            # Wait for services to be healthy
            sleep 60
            
            # Verify services are running
            echo "Checking service status:"
            docker-compose ps
            
          EOF
          rm -f private_key
